FORMAT: 1A
HOST: http://giv-sitcomlab.uni-muenster.de:8080

# IPED-Toolkit-API (v3.2)

# Group Hosts
* HOST-OFFICIAL-HTTP ( **MASTER** ): [http://giv-sitcomlab.uni-muenster.de:8080](http://giv-sitcomlab.uni-muenster.de:8080)
* HOST-OFFICIAL-HTTP ( **DEVELOP** ): [http://giv-sitcomlab.uni-muenster.de:8081](http://giv-sitcomlab.uni-muenster.de:8081)
* HOST-OFFICIAL-HTTPS ( **DEVELOP** ): [http://giv-sitcomlab.uni-muenster.de:8444](http://giv-sitcomlab.uni-muenster.de:8444)
* HOST-LOCAL ( DEVELOP ): [http://localhost:8080](http://localhost:8080)

#### Allowed HTTP requests:

| METHODE | Description |
|----------|----------|
| `GET` | Get a resource or list of resources |
| `POST` | To create or update resource |
| `PUT` | To create or update resource |
| `DELETE` | To delete resource |

#### Server Responses:
| CODE | STATUS | Description |
|----------|----------|----------|
|`200`| `OK` | the request was successfull |
|`201`| `CREATED` |  the request was successfull and a resource was created |
|`500`| `INTERNAL SERVER ERROR` | the request is unavailable |


# Group Browser and Videoformats
The application runs only in the 2 Browser below. If you upload videos on the server, please make sure that you upload:

* a `*.mp4`-Format for **Google Chrome** and
* a `*.ogv`-Format for **Mozilla Firefox**.

Please upload both formats everytime for a better browsersupport and make sure that the **filenames are still the same**!

**ATTENTION IF YOU USE THE REQUESTS:**

* `[POST] /api/videos` or 
* `[PUT] /api/videos/:id` 

and you want to submit a server-path, of the uploaded files, for example **task08.mp4** and **task08.ogv**,<br/>
**DO NEVER SUBMIT THE DATATYPE** `*.mp4` **OR** `*.ogv` **WITH YOUR URL!**<br/>
**YOUR URL SHOULD ONLY CONENTS THE FILENAME, for example:** `http://giv-sitcomlab.uni-muenster.de:8080/media/video/task08`.<br/>
The application will check the browser and will pick the right videoformat automatically, so you don't need to submit them, thank you!


# Group For developers 

>**Note**: only for the API-Specification on Apiary.io

#### API-Example of the blueprint code:
* for API-Syntax check out the **Apiary-Tutorial**: [http://apiary.io/blueprint](http://apiary.io/blueprint)
* for API-Syntax check out the **Blueprint-Documenation**: [http://apiblueprint.org](http://apiblueprint.org)
* for a good example of the API-Syntax check out the **GoodData API** ([http://docs.gooddata.apiary.io](http://docs.gooddata.apiary.io)) with the corresponding Markdownfile *apiary.apib* in the GitHub-Respository ([https://github.com/gooddata/gooddata-api-docs.git](https://github.com/gooddata/gooddata-api-docs.git)).

#### API-Comments:
It is possible to write a comments to discuss the API-Specification on Apiary. Leave the EDITOR-MODE and go to DOCUMENTATION. Scroll down to the corresponding function and click the 
**Add comment**-Button on the right side of the box.


# Group Locations

## Locations Collection [/api/locations]
### List all Locations [GET]

+ Response 200 (application/json)

        [
            {
                "tags":[
                    "Münster",
                    "Frauenstraße",
                    "ULB",
                    "Küpers",
                    "Überwasserkirche",
                    "Meyer-Potthof"
                ],
                "lon":7.6208476,
                "description":"Blick Richtung ULB",
                "name":"Frauenstraße 2",
                "lat":51.9633794,
                "id":701,
                "relatedLocations":[
                    710,
                    702
                ],
                "videos":[
                    713
                ],
                "overlays":[]
            },
            {
                "tags":[
                    "Münster",
                    "Krummer Timpen",
                    "ULB",
                    "Juridicum"
                ],
                "lon":7.6201791,
                "description":"Gegenüber der ULB",
                "name":"Krummer Timpen",
                "lat":51.9627494,
                "id":702,
                "videos":[
                    714
                ],
                "relatedLocations":[
                    699,
                    703,
                    701
                ],
                "overlays":[]
            },
            {
                "tags":[
                    "Juridicum",
                    "Krummer Timpen",
                    "ULB",
                    "Münster"
                ],
                "lon":"7.619770",
                "description":"",
                "name":"Krummer Timpen 2",
                "lat":"51.962613",
                "id":703,
                "overlays":[],
                "videos":[
                    715
                ],
                "relatedLocations":[
                    704,
                    702
                ]
            }
        ] 

+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>


### Create a Location [POST]

<u>**Required properties:**</u>

| Property | Datatype | Can be empty | Condition | Options | Example |
|----------|----------|----------|----------|----------|----------|
| `name` | <b>String</b> | no | | | `"Frauenstraße"` |
| `description` | <b>String</b> | yes | | "" | `"Gegenüber der Trattoria"` |
| `tags[]` | <b>String []</b> | yes | | `[]` | `["Münster", "Frauenstraße", "Trattoria", "Kulturcafé", "Fürstin-von-Gallitzin-Wohnheim"]` |
| `lon` | <b>Number</b> | no | | *""* | `7.6189278` |
| `lat` | <b>Number [ ]</b> | no | | | `51.9634288` |
| `relatedLocations[ ]` | <b>Integer [ ]</b> | no | valid Location-IDs | `[]` | `[1,6,9,4,5]` |
| `videos[ ]` | <b>Integer [ ]</b> | no | valid video-IDs | `[]` | `[3]` |
| `overlays[ ]` | <b>Integer [ ]</b> | no | valid overlay-IDs | `[]` | `[2,7,8]` |


+ Request (application/json)

    + Body
    
                { 
                    "name": "Frauenstraße", 
                    "tags": [
                        "Münster",
                        "Frauenstraße",
                        "Trattoria",
                        "Kulturcafé",
                        "Fürstin-von-Gallitzin-Wohnheim"
                    ],
                    "lon": 7.6189278,
                    "lat": 51.9634288,
                    "description": "Gegenüber der Trattoria",
                    "relatedLocations": [],
                    "videos": [],
                    "overlays": []
                }

+ Response 201 (application/json)

        {
            "id":4,
            "name":"Frauenstraße",
            "tags":[
                "Münster",
                "Frauenstraße",
                "Trattoria",
                "Kulturcafé",
                "Fürstin-von-Gallitzin-Wohnheim"
            ],
            "lon": 7.6189278,
            "lat": 51.9634288,
            "description":"Gegenüber der Trattoria",
            "relatedLocations": [],
            "videos": [],
            "overlays": []
        }

+ Response 400 (text/plain)
        
        Error: No data submitted!

        Error: The property "<propertyName>" was not found, but has to be defined!

        Error: The property "<propertyName>" is needless and not allowed!

        Error: The value of the property "<propertyName>" can not be emtpy!

        Error: The value of the property "<propertyName>" has to be a float/number!

        Error: The value of the property "<propertyName>" has to be an integer!

        Error: The element values of the array "<propertyName>" are not unique!

+ Response 404 (text/plain)
        
        Error: The ID <propertyValue> in the "<propertyName>"-Array could not be found!
        
+ Response 406 (text/plain)
        
        Error: The ID <propertyValue> in the "<propertyName>"-Array belongs to a "<differentObject>"!

+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>

## Location [/api/locations/{id}]
A single Location object with all its details

+ Parameters
    + id (required, Interger, `4`) ... `id` of a **Location**

### Retrieve a Location [GET]
(Status: **implemented**, Developer: Nicho)

+ Response 200 (application/json)

    + Body
    
            {
                "id":4,
                "name":"Frauenstraße",
                "tags":[
                    "Münster",
                    "Frauenstraße",
                    "Trattoria",
                    "Kulturcafé",
                    "Fürstin-von-Gallitzin-Wohnheim"
                ],
                "lon":7.6189278,
                "lat":51.9634288,
                "description":"Gegenüber der Trattoria",
                "relatedLocations": [
                    1, 
                    3
                ],
                "videos": [
                    5
                ]
                "overlays": [
                    7,
                    8
                ]
            }
            
+ Response 404 (text/plain)

        Error: The submitted "<Object>"-ID could not be found!
        
+ Response 406 (text/plain)

        Error: No valid request! The submitted ID is not an integer!
        
        Error: No valid request! The submitted "<Object>"-ID belongs to a "<differentObject>"!        
            
+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>

### Edit a Location [PUT]
(Status: **implemented**, Developer: Nicho)


<u>**Changeable properties**</u>

>**Note**: A minimum of one property is required.

- `name` **String** (can not be empty; example: *"Frauenstraße 2"*)
- `description` **String** (can be empty; example: *"Gegenüber der Trattoria"*)
- `tags[]` **String[ ]** (can be empty, but can not have empty elemtens like *""* and elements have to be unique; example: *["Münster", "Frauenstraße", "Trattoria", "Kulturcafé", "Fürstin-von-Gallitzin-Wohnheim"]*)
- `lon` **Float/Number** (can not be empty; example: *7.6189278*)
- `lat` **Float/Number** (can not be empty; example: *51.9634288*)
- `relatedLocations` **Integer[ ]** (can be empty or have to contain valid Location-IDs; example: *[ ]* or *[1,6,9,4,5]*)
- `videos` **Integer[ ]** (can be empty or have to contain valid video-IDs; example: *[ ]* or *[3]*)
- `overlays` **Integer[ ]** (can be empty or have to contain valid overlay-IDs; example: *[ ]* or *[2,7,8]*)

<u>**Optional property**</u>
>**Note**: This property is not neccessary, but acceptable.

- `id` **Integer** (can not be empty; Example: *4*)

+ Request (application/json)

    + Body
    
            {
                "name":"Frauenstraße 2",
                "tags":[
                    "Münster",
                    "Frauenstraße",
                    "Trattoria",
                    "Kulturcafé",
                    "Fürstin-von-Gallitzin-Wohnheim"
                ]
            }

+ Response 201 (application/json)

        {
                "id":4,
                "name":"Frauenstraße 2",
                "tags":[
                    "Münster",
                    "Frauenstraße",
                    "Trattoria",
                    "Kulturcafé",
                    "Fürstin-von-Gallitzin-Wohnheim"
                ],
                "lon":7.6189278,
                "lat":51.9634288,
                "description":"Gegenüber der Trattoria",
                "relatedLocations": [],
                "videos": [
                    711
                ],
                "overlays": []
        }
        
+ Response 400 (text/plain)

        Error: No data submitted!

        Error: The property "<propertyName>" is needless and not allowed!

        Error: The value of the property "<propertyName>" can not be emtpy!

        Error: The value of the property "<propertyName>" has to be a float/number!

        Error: The value of the property "<propertyName>" has to be an integer!

        Error: The element values of the array "<propertyName>" are not unique!

+ Response 404 (text/plain)

        Error: The submitted "<Object>"-ID could not be found!
        
        Error: The ID <propertyValue> in the "<propertyName>"-Array could not be found!
        
+ Response 406 (text/plain)

        Error: No valid request! The submitted ID is not an integer!
        
        Error: No valid request! The submitted "<Object>"-ID belongs to a "<differentObject>"!
        
        Error: The ID <propertyValue> in the "<propertyName>"-Array belongs to a "<differentObject>"!
        
+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>

### Remove a Location [DELETE]
(Status: **implemented**, Developer: Nicho)

+ Response 204

+ Response 404 (text/plain)

        Error: The submitted "<Object>"-ID could not be found!
        
+ Response 406 (text/plain)

        Error: No valid request! The submitted ID is not an integer!
        
        Error: No valid request! The submitted "<Object>"-ID belongs to a "<differentObject>"!

+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>

## Relations of a Location [/api/locations/{id}/locations]

+ Parameters
    + id (required, Interger, `699`) ... `id` of a **Location**

### Retrieve all related Locations of a Location [GET]
(Status: **implemented**, Developer: Nicho)

+ Response 200

    + Body
    
            [
                {
                    "tags": [
                        "Münster",
                        "Frauenstraße",
                        "Trattoria",
                        "Kulturcafé",
                        "Fürstin-von-Gallitzin-Wohnheim"
                    ],
                    "lon": "7.6189278",
                    "description": "Gegenüber der Trattoria",
                    "name": "Frauenstraße",
                    "lat": "51.9634288",
                    "id": 710
                },
                {
                    "tags": [
                        "Münster",
                        "Krummer Timpen",
                        "ULB",
                        "Juridicum"
                    ],
                    "lon": 7.6201791,
                    "description": "Gegenüber der ULB",
                    "name": "Krummer Timpen",
                    "lat": 51.9627494,
                    "id": 702
                }
            ]

+ Response 404 (text/plain)

        Error: The submitted "<Object>"-ID could not be found!
        
+ Response 406 (text/plain)

        Error: No valid request! The submitted ID is not an integer!
        
        Error: No valid request! The submitted "<Object>"-ID belongs to a "<differentObject>"!

+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>


# Group Videos

## Videos Collection [/api/videos]

### List all Videos [GET]
(Status: **implemented**, Developer: Nicho)

+ Response 200 (application/json)

        [
            {
                "id": 35,
                "description": "Frauenstraße bei Tag",
                "name": "Frauenstraße",
                "date": "",
                "url": "http://giv-sitcomlab.uni-muenster.de:8080/media/video/task_02",
                "tags": []
            },
            {
                "id": 36,
                "description": "Frauenstraße bei Tag",
                "name": "Frauenstraße2",
                "date": "",
                "url": "http://giv-sitcomlab.uni-muenster.de:8080/media/video/task_03",
                "tags": []
            }
        ]
        
+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>     

### Create a Video [POST]
(Status: **implemented**, Developer: Nicho)

<u>**Required properties**</u>:

- `name` **String** (can not be empty; example: *"Frauenstraße"*)
- `description` **String** (can be empty; example: *"Frauenstraße bei Tag"*)
- `date` **Date** (can be empty or has to be the form **YYYY-MM-DD** or **YYYY-MM-DD HH:mm** [with **Y**=Year, **M**=Month, **D**=Day, **H**=Hour, **m**=Minute]; examples: *"2014-06-22"* or *"2014-06-22 08:03"*)
- `url` **String** (**ATTENTION: Please have a look on the [Browser and Videoformats](#browser-and-videoformats) on the top of this document**; can not be empty and url has to be available and doesn't contain a dataformat; example: *"http://giv-sitcomlab.uni-muenster.de:8080/media/video/task_03"*)
- `tags[]` **String[ ]** (can be empty, but can not have empty elemtens like *""* and elements have to be unique; example: *["Schlossplatz", "Event: Send", "at night"]*)

+ Request (application/json)

    + body
    
            { 
                "description": "Frauenstraße bei Tag",
                "name": "Frauenstraße2",
                "date": "",
                "url": "http://giv-sitcomlab.uni-muenster.de:8080/media/video/task_03",
                "tags":[]
            }

+ Response 201 (application/json)

        {  
            "id":36,
            "description":"Frauenstraße bei Tag",
            "name":"Frauenstraße2",
            "date":"",
            "url":"http://giv-sitcomlab.uni-muenster.de:8080/media/video/task_03",
            "tags":[]
        }
        
+ Response 400 (text/plain)
        
        Error: No data submitted!

        Error: The property "<propertyName>" was not found, but has to be defined!

        Error: The property "<propertyName>" is needless and not allowed!

        Error: The value of the property "<propertyName>" can not be emtpy!

        Error: The element values of the array "<propertyName>" are not unique!
        
        Error: The value of the property "url" is not a valid URL!
        
        Error: The value of the property "url" contains a videoformat! Please submit only the filename!
        
        Error: The value of the property "date" is not a valid DATE! Please submit a date in the form "YYYY-MM-DD" OR "YYYY-MM-DD HH:mm" (Y=YEAR, M=Month, D=Day, H=Hour, m=Minute), for example: "2014-05-01 08:04")!

+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>

## Video [/api/videos/{id}]
A single Video object with all details

+ Parameters
   + id (required, Interger, `36`) ... `id` of a **Video**

### Retrieve a video [GET]
(Status: **implemented**, Developer: Nicho)

+ Response 200 (application/json)

    + Body

            {  
                "id":36,
                "description":"Frauenstraße bei Tag",
                "name":"Frauenstraße2",
                "date":"",
                "url":"http://giv-sitcomlab.uni-muenster.de:8080/media/video/task_03",
                "tags":[]
            }
            
+ Response 404 (text/plain)

        Error: The submitted "<Object>"-ID could not be found!
        
+ Response 406 (text/plain)

        Error: No valid request! The submitted ID is not an integer!
        
        Error: No valid request! The submitted "<Object>"-ID belongs to a "<differentObject>"!
            
+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>

### Edit a Video [PUT]
(Status: **implemented**, Developer: Nicho)

<u>**Changeable properties**</u>

>**Note**: A minimum of one property is required.

- `name` **String** (can not be empty; example: *"Frauenstraße"*)
- `description` **String** (can be empty; example: *"Frauenstraße bei Tag"*)
- `date` **Date** (can be empty or has to be the form **YYYY-MM-DD** or **YYYY-MM-DD HH:mm** [with **Y**=Year, **M**=Month, **D**=Day, **H**=Hour, **m**=Minute]; examples: *"2014-06-22"* or *"2014-06-22 08:03"*)
- `url` **String** (**ATTENTION: Please have a look on the [Browser and Videoformats](#browser-and-videoformats) on the top of this document**; can not be empty and url has to be available and doesn't contain a dataformat; example: *"http://giv-sitcomlab.uni-muenster.de:8080/media/video/task_03"*)
- `tags[]` **String[ ]** (can be empty, but can not have empty elemtens like *""* and elements have to be unique; example: *["Schlossplatz", "Event: Send", "at night"]*)

<u>**Optional property**</u>
>**Note**: This property is not neccessary, but acceptable.

- `id` **Integer** (can not be empty; Example: *36*)

+ Request (application/json)

    + body
    
                { 
                    "description": "Frauenstraße bei Nacht",
                    "name": "Frauenstraße 2"
                }

+ Response 201 (application/json)

        {  
            "id":36,
            "description":"Frauenstraße bei Nacht",
            "name":"Frauenstraße 2",
            "date":"",
            "url":"http://giv-sitcomlab.uni-muenster.de:8080/media/video/task_03",
            "tags":[]
        }
        
+ Response 400 (text/plain)
        
        Error: No data submitted!

        Error: The property "<propertyName>" is needless and not allowed!

        Error: The value of the property "<propertyName>" can not be emtpy!

        Error: The element values of the array "<propertyName>" are not unique!

        Error: The value of the property "url" is not a valid URL!
        
        Error: The value of the property "url" contains a videoformat! Please submit only the filename!
        
        Error: The value of the property "date" is not a valid DATE! Please submit a date in the form "YYYY-MM-DD" OR "YYYY-MM-DD HH:mm" (Y=YEAR, M=Month, D=Day, H=Hour, m=Minute), for example: "2014-05-01 08:04")!

+ Response 404 (text/plain)

        Error: The submitted "<Object>"-ID could not be found!
        
+ Response 406 (text/plain)

        Error: No valid request! The submitted ID is not an integer!
        
        Error: No valid request! The submitted "<Object>"-ID belongs to a "<differentObject>"!
            
+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>

### Remove a Video [DELETE]
(Status: **implemented**, Developer: Nicho)

+ Response 204

+ Response 404 (text/plain)

        Error: The submitted "<Object>"-ID could not be found!
        
+ Response 406 (text/plain)

        Error: No valid request! The submitted ID is not an integer!
        
        Error: No valid request! The submitted "<Object>"-ID belongs to a "<differentObject>"!
            
+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>

## Relations of a Location [/api/locations/{id}/videos]

+ Parameters
    + id (required, Interger, `699`) ... `id` of a **Location**

### Retrieve all Videos of a Location [GET]
(Status: **implemented**, Developer: Nicho)

+ Response 200

    + Body
    
            [
                {
                    "tags": [
                        "Schlossplatz",
                        "bei Tag"
                    ],
                    "description": "Schlossplatz bei Tag",
                    "name": "Schlossplatz",
                    "date": "No date available",
                    "url": "https://giv-sitcomlab.uni-muenster.de:8444/media/video/task_01",
                    "id": 711
                }
            ]

+ Response 404 (text/plain)

        Error: The submitted "<Object>"-ID could not be found!
        
+ Response 406 (text/plain)

        Error: No valid request! The submitted ID is not an integer!
        
        Error: No valid request! The submitted "<Object>"-ID belongs to a "<differentObject>"!

+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>

# Group Overlays

## Overlays Collection [/api/overlays]
### List all Overlays [GET]
(Status: **implemented**, Developer: Nicho)

+ Response 200 (application/json)
        
        [
            {
                "id": 23,
                "tags": [
                    "video",
                    "test"
                ],
                "d": 0,
                "type": "html",
                "url": "https://giv-sitcomlab.uni-muenster.de:8443/room/main/",
                "h": 600,
                "w": 800,
                "rz": 0,
                "description": "Video Overlay Test",
                "name": "Video Overlay",
                "z": 0,
                "rx": 0,
                "y": 0,
                "ry": 0,
                "x": 100
            }
        ]

+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>

### Create an Overlay [POST]
(Status: **implemented**, Developer: Nicho)

<u>**Required properties**</u>:

- `name` **String** (can not be empty; example: *"1st Public Display"*)
- `description` **String** (can be empty; example: *"Public Display zum Anzeigen von ortsbezogenen Daten"*)
- `tags` **String[ ]** (can be empty, but can not have empty elemtens like *""* and elements have to be unique; example: *["video", "test", "Public Display"]*)
- `type` **String** (can not be empty and has to be one of these options: *"html"*, *"image"*, *"video"*)
- `url` **String** (can not be empty and url has to be available; example: *"https://giv-sitcomlab.uni-muenster.de:8443/room/main/"*)
- `w` **Float/Number** (can not be empty and has to be a float; expample: *800*; default: *0*)
- `h` **Float/Number** (can not be empty and has to be a float; expample: *600*; default: *0*)
- `x` **Float/Number** (can not be empty and has to be a float; expample: *100*; default: *0*)
- `y` **Float/Number** (can not be empty and has to be a float; expample: *10.1*; default: *0*)
- `z` **Float/Number** (can not be empty and has to be a float; expample: *20.2*; default: *0*)
- `d` **Float/Number** (can not be empty and has to be a float; expample: *30.3*; default: *0*)
- `rx` **Float/Number** (can not be empty and has to be a float; expample: *40.4*; default: *0*)
- `ry` **Float/Number** (can not be empty and has to be a float; expample: *50.5*; default: *0*)
- `rz` **Float/Number** (can not be empty and has to be a float; expample: *60.6*; default: *0*)


+ Request (application/json)

    + body 
    
            {   
                "name":"Video Overlay",
                "description":"Video Overlay Test",
                "tags":[
                    "video",
                    "test"
                ],
                "type":"html",
                "url":"https://giv-sitcomlab.uni-muenster.de:8443/room/main/",
                "w":800,
                "h":600,
                "x":100,
                "y":0,
                "z":0,
                "d":0,
                "rx":0,
                "ry":0,
                "rz":0
            }

+ Response 201 (application/json)

        {   
            "id":23,
            "name":"Video Overlay",
            "description":"Video Overlay Test",
            "tags":[
                "video",
                "test"
            ],
            "type":"html",
            "url":"https://giv-sitcomlab.uni-muenster.de:8443/room/main/",
            "w":800,
            "h":600,
            "x":100,
            "y":0,
            "z":0,
            "d":0,
            "rx":0,
            "ry":0,
            "rz":0
        }

+ Response 400 (text/plain)

        Error: No data submitted!

        Error: The property "<propertyName>" was not found, but has to be defined!

        Error: The property "<propertyName>" is needless and not allowed!

        Error: The value of the property "<propertyName>" can not be emtpy!

        Error: The value of the property "<propertyName>" has to be a float/number!

        Error: The value of the property "<propertyName>" is incorrect! Only the values ["<value1>","<value2>","<value3>"] are allowed!

        Error: The element values of the array "<propertyName>" are not unique!

        Error: The value of the property "url" is not a valid URL!
        
+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>

## Overlay [/api/overlays/{id}]
A single Overlay object with all its details

+ Parameters
   + id (required, Interger, `23`) ... `id` of an **Overlay**

### Retrieve an Overlay [GET]
(Status: **implemented**, Developer: Nicho)

+ Response 200 (application/json)

    + Body

            {
                "id":23,
                "name":"Video Overlay",
                "description":"Video Overlay Test",
                "tags":[
                    "video",
                    "test"
                ],
                "type":"html",
                "url":"https://giv-sitcomlab.uni-muenster.de:8443/room/main/",
                "w":800,
                "h":600,
                "x":100,
                "y":0,
                "z":0,
                "d":0,
                "rx":0,
                "ry":0,
                "rz":0
            }
            
+ Response 404 (text/plain)

        Error: The submitted "<Object>"-ID could not be found!
        
+ Response 406 (text/plain)

        Error: No valid request! The submitted ID is not an integer!
        
        Error: No valid request! The submitted "<Object>"-ID belongs to a "<differentObject>"!
            
+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>            

### Edit an Overlay [PUT]
(Status: **implemented**, Developer: Nicho)

<u>**Changeable properties**</u>

>**Note**: A minimum of one property is required.

- `name` **String** (can not be empty; example: *"1st Public Display"*)
- `description` **String** (can be empty; example: *"Public Display zum Anzeigen von ortsbezogenen Daten"*)
- `tags` **String[ ]** (can be empty, but can not have empty elemtens like *""* and elements have to be unique; example: *["video", "test", "Public Display"]*)
- `type` **String** (can not be empty and has to be one of these options: *"html"*, *"image"*, *"video"*)
- `url` **String** (can not be empty and url has to be available; example: *"https://giv-sitcomlab.uni-muenster.de:8443/room/main/"*)
- `w` **Float/Number** (can not be empty and has to be a float; expample: *800*; default: *0*)
- `h` **Float/Number** (can not be empty and has to be a float; expample: *600*; default: *0*)
- `x` **Float/Number** (can not be empty and has to be a float; expample: *100*; default: *0*)
- `y` **Float/Number** (can not be empty and has to be a float; expample: *10.1*; default: *0*)
- `z` **Float/Number** (can not be empty and has to be a float; expample: *20.2*; default: *0*)
- `d` **Float/Number** (can not be empty and has to be a float; expample: *30.3*; default: *0*)
- `rx` **Float/Number** (can not be empty and has to be a float; expample: *40.4*; default: *0*)
- `ry` **Float/Number** (can not be empty and has to be a float; expample: *50.5*; default: *0*)
- `rz` **Float/Number** (can not be empty and has to be a float; expample: *60.6*; default: *0*)

<u>**Optional property**</u>
>**Note**: This property is not neccessary, but acceptable.

- `id` **Integer** (can not be empty; Example: *23*)

+ Request (application/json)

    + body 
    
            {   
                "name":"Video Overlay 2",
                "description":"Video Overlay Test 2",
                "tags":[
                    "video",
                    "test"
                ],
                "type":"html",
                "url":"https://giv-sitcomlab.uni-muenster.de:8443/room/main/"
            }

+ Response 201 (application/json)

        {   
            "id":23,
            "name":"Video Overlay 2",
            "description":"Video Overlay Test 2",
            "tags":[
                "video",
                "test"
            ],
            "type":"html",
            "url":"https://giv-sitcomlab.uni-muenster.de:8443/room/main/",
            "w":800,
            "h":600,
            "x":100,
            "y":0,
            "z":0,
            "d":0,
            "rx":0,
            "ry":0,
            "rz":0
        }
        
+ Response 400 (text/plain)

        Error: No data submitted!

        Error: The property "<propertyName>" is needless and not allowed!

        Error: The value of the property "<propertyName>" can not be emtpy!

        Error: The value of the property "<propertyName>" has to be a float/number!

        Error: The value of the property "<propertyName>" is incorrect! Only the values ["<value1>","<value2>","<value3>"] are allowed!

        Error: The element values of the array "<propertyName>" are not unique!

        Error: The value of the property "url" is not a valid URL!

+ Response 404 (text/plain)

        Error: The submitted "<Object>"-ID could not be found!
        
+ Response 406 (text/plain)

        Error: No valid request! The submitted ID is not an integer!
        
        Error: No valid request! The submitted "<Object>"-ID belongs to a "<differentObject>"!
            
+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>


### Remove an Overlay [DELETE]
(Status: **implemented**, Developer: Nicho)

+ Response 204

+ Response 404 (text/plain)

        Error: The submitted "<Object>"-ID could not be found!
        
+ Response 406 (text/plain)

        Error: No valid request! The submitted ID is not an integer!
        
        Error: No valid request! The submitted "<Object>"-ID belongs to a "<differentObject>"!
            
+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>

## Relations of a Location [/api/locations/{id}/overlays]

+ Parameters
    + id (required, Interger, `699`) ... `id` of a **Location**

### Retrieve all Overlays of a Location [GET]
(Status: **implemented**, Developer: Nicho)

+ Response 200

    + Body
    
            [
                {
                    "tags": [
                        "video",
                        "test"
                    ],
                    "rz": 0,
                    "w": 800,
                    "d": 0,
                    "description": "Video Overlay Test",
                    "name": "Video Overlay",
                    "type": "html",
                    "z": 0,
                    "url": "https://giv-sitcomlab.uni-muenster.de:8444/room/main",
                    "y": 0,
                    "rx": 0,
                    "h": 600,
                    "x": 100,
                    "ry": 0,
                    "id": 721
                }
            ]

+ Response 404 (text/plain)

        Error: The submitted "<Object>"-ID could not be found!
        
+ Response 406 (text/plain)

        Error: No valid request! The submitted ID is not an integer!
        
        Error: No valid request! The submitted "<Object>"-ID belongs to a "<differentObject>"!

+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>