FORMAT: 1A
HOST: http://giv-sitcomlab.uni-muenster.de:8080

# IPED-Toolkit-API


<!-- BEGIN OF THE INTRO -->
#### Hosts
* HOST-OFFICIAL ( **MASTER** ): [http://giv-sitcomlab.uni-muenster.de:8080](http://giv-sitcomlab.uni-muenster.de:8080)
* HOST-OFFICIAL ( **DEVELOP** ): [http://giv-sitcomlab.uni-muenster.de:8081](http://giv-sitcomlab.uni-muenster.de:8081)
* HOST-LOCAL ( DEVELOP ): [http://localhost:8080](http://localhost:8080)

#### Allowed HTTPs requests:
* **GET** - Get a resource or list of resources
* **POST** - To create or update resource
* **PUT** - To create or update resource
* **DELETE** - To delete resource

#### Description of Server Responses:

##### 2XX (Successfull)
* **200** `OK` - the request was successful (some API calls may return 201 instead).
* **201** `Created` - the request was successful and a resource was created.
* **204** `No Content` - the request was successful but there is no representation to return (i.e. the response is empty).
* **211** `Unkown` - the request was partially successful and the resource was created (see more information in the corresponding functions)
* **212** `Unkown` - the request was partially successful and the resource was created (see more information in the corresponding functions)
* **213** `Unkown` - the request was partially successful and the resource was created (see more information in the corresponding functions)
* **214** `Unkown` - the request was partially successful and the resource was created (see more information in the corresponding functions)
* **215** `Unkown` - the request was partially successful and the resource was created (see more information in the corresponding functions)
* **216** `Unkown` - the request was partially successful and the resource was created (see more information in the corresponding functions)
* **217** `Unkown` - the request was partially successful and the resource was created (see more information in the corresponding functions)

##### 4XX (Errors) 
* **400** `Bad Request` - the request could not be understood or was missing required parameters.
* **401** `Unauthorized` - authentication failed or user doesn't have permissions for requested operation.
* **403** `Forbidden` - access denied.
* **404** `Not Found` - resource was not found.
* **405** `Method Not Allowed` - requested method is not supported for resource.
* **406** `Not Acceptable` - the requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request.

##### 5XX (Server Problems)
* **500** `Internal Server Error` - the request is unavailable
* **503** `Service Unavailable` - service is temporary unavailable (e.g. scheduled Platform Maintenance). Try again later.

#### API-Status options:
* **implemented** \[+]: Implementation on official Server is finished and works
* **problems** \[+]:  Implementation on official Server finished, but there are some problems, please wrote a comment at the API-function in this tool
* **in progress** \[+]: Design is finished and the functions will be implemented on official Server at the moment
* **not yet implemented** :  Design is finished, but not yet implemented on official Server, but is planned
* **in design** :  The Starting point, designing the function in this tool

\[+] Please write your name, after the following status, so it is possible to see, how works on which part,
e.g. "(Status: **implemented**, Developer: Nicho)". If you want to implement a function of an other developer please contact him first, befor you overwrite his name.

#### API-Example of the blueprint code:
* for API-Syntax check out the **Apiary-Tutorial**: [http://apiary.io/blueprint](http://apiary.io/blueprint)
* for API-Syntax check out the **Blueprint-Documenation**: [http://apiblueprint.org](http://apiblueprint.org)

```
### List all Locations [GET]

(Status: **implemented**, Developer: Nicho)

+ Response 200 (application/json)

(...)
```
* For more examples check out: [http://docs.gooddata.apiary.io](http://docs.gooddata.apiary.io)


### API-Comments:
It is possible to write a comments to discuss the API. Leave the EDITOR-MODE and go to DOCUMENTATION. Scroll down to the corresponding funtion click the 
"Add comment"-Button on the right side of the box.

<!-- END OF THE INTRO -->

* * *

<!-- BEGIN OF THE API -->

# Group Locations

## Locations Collection [/api/locations]
### List all Locations [GET]
(Status: **implemented**, Developer: Nicho)

+ Response 200 (application/json)
        
        {
            "locations": 
                [
                    {  "_id":0, 
                        "name":"Juridicum", 
                        "tags":[
                            "Juridicum", 
                            "Krummer Timpen", 
                            "ULB", 
                            "Münster"
                        ], 
                        "lon": 7.619681,
                        "lat": 51.962367, 
                        "description":""
                    }, {
                        "_id":1, 
                        "name":"Jesuitengang", 
                        "tags":[
                            "Juridicum", 
                            "Jesuitengang", 
                            "ULB", 
                            "Münster", 
                            "Petrikirche"
                        ],
                        "lon": 7.621709,
                        "lat": 51.961971,
                        "description":" Behind the ULB"
                    }
                ]
        }

+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>


### Create a Location [POST]
(Status: **implemented**, Developer: Nicho)

Required attributes:

- `name` **String** (can not be empty; example: *"Frauenstraße"*)
- `description` **String** (can be empty; example: *"Gegenüber der Trattoria"*)
- `tags[]` **String[ ]** (can be empty, but can not have empty elemtens like *""*; example: *["Münster", "Frauenstraße", "Trattoria", "Kulturcafé", "Fürstin-von-Gallitzin-Wohnheim"]*)
- `lon` **Float/Number** (can not be empty; example: *7.6189278*)
- `lat` **Float/Number** (can not be empty; example: *51.9634288*)
- `relatedLocations` **Integer[ ]** (can be empty or have to contain valid Location-IDs; example: *[ ]* or *[1,6,9,4,5]*)
- `videos` **Integer[ ]** (can be empty or have to contain valid video-IDs; example: *[ ]* or *[3]*)
- `overlays` **Integer[ ]** (can be empty or have to contain valid overlay-IDs; example: *[ ]* or *[2,7,8]*)


HTTP-Status:

- `201` Created succesfully a Location with all relatedLocations, Videos and Overlays
- `211` Created succesfully a Location, but couldn't set all relatedLocations (please check if all IDs of the relatedLocations exist)
- `212` Created succesfully a Location, but couldn't set all Videos (please check if all IDs of the Videos exist)
- `213` Created succesfully a Location, but couldn't set all Overlays (please check if all IDs of the Overlays exist)
- `214` Created succesfully a Location, but couldn't set all relatedLocations and Videos (please check if all IDs of the relatedLocations and Videos exist)
- `215` Created succesfully a Location, but couldn't set all relatedLocations and Overlays (please check if all IDs of the relatedLocations and Overlays exist)
- `216` Created succesfully a Location, but couldn't set all Videos and Overlays (please check if all IDs of the Videos and Overlays exist)
- `217` Created succesfully a Location, but couldn't set all relatedLocations, Videos and Overlays (please check if all IDs of the relatedLocations, Videos and Overlays exist)


+ Request (application/json)

    + Body
    
                { 
                    "name": "Frauenstraße", 
                    "tags": [
                        "Münster",
                        "Frauenstraße",
                        "Trattoria",
                        "Kulturcafé",
                        "Fürstin-von-Gallitzin-Wohnheim"
                    ],
                    "lon": 7.6189278,
                    "lat": 51.9634288,
                    "description": "Gegenüber der Trattoria",
                    "relatedLocations": [],
                    "videos": [],
                    "overlays": []
                }

+ Response 201 (application/json)

        {
            "_id":4,
            "name":"Frauenstraße",
            "tags":[
                "Münster",
                "Frauenstraße",
                "Trattoria",
                "Kulturcafé",
                "Fürstin-von-Gallitzin-Wohnheim"
            ],
            "lon": 7.6189278,
            "lat": 51.9634288,
            "description":"Gegenüber der Trattoria",
            "relatedLocations": [],
            "videos": [],
            "overlays": []
        }
        
+ Response 211 (application/json)
        
        {
            "_id":4,
            "name":"Frauenstraße",
            "tags":[
                "Münster",
                "Frauenstraße",
                "Trattoria",
                "Kulturcafé",
                "Fürstin-von-Gallitzin-Wohnheim"
            ],
            "lon": 7.6189278,
            "lat": 51.9634288,
            "description":"Gegenüber der Trattoria",
            "relatedLocations": [],
            "videos": [],
            "overlays": []
        }
        
+ Response 212 (application/json)
        
         {
            "_id":4,
            "name":"Frauenstraße",
            "tags":[
                "Münster",
                "Frauenstraße",
                "Trattoria",
                "Kulturcafé",
                "Fürstin-von-Gallitzin-Wohnheim"
            ],
            "lon": 7.6189278,
            "lat": 51.9634288,
            "description":"Gegenüber der Trattoria",
            "relatedLocations": [],
            "videos": [],
            "overlays": []
        }

+ Response 213 (application/json)

         {
            "_id":4,
            "name":"Frauenstraße",
            "tags":[
                "Münster",
                "Frauenstraße",
                "Trattoria",
                "Kulturcafé",
                "Fürstin-von-Gallitzin-Wohnheim"
            ],
            "lon": 7.6189278,
            "lat": 51.9634288,
            "description":"Gegenüber der Trattoria",
            "relatedLocations": [],
            "videos": [],
            "overlays": []
        }

+ Response 214 (application/json)

         {
            "_id":4,
            "name":"Frauenstraße",
            "tags":[
                "Münster",
                "Frauenstraße",
                "Trattoria",
                "Kulturcafé",
                "Fürstin-von-Gallitzin-Wohnheim"
            ],
            "lon": 7.6189278,
            "lat": 51.9634288,
            "description":"Gegenüber der Trattoria",
            "relatedLocations": [],
            "videos": [],
            "overlays": []
        }

+ Response 215 (application/json)

         {
            "_id":4,
            "name":"Frauenstraße",
            "tags":[
                "Münster",
                "Frauenstraße",
                "Trattoria",
                "Kulturcafé",
                "Fürstin-von-Gallitzin-Wohnheim"
            ],
            "lon": 7.6189278,
            "lat": 51.9634288,
            "description":"Gegenüber der Trattoria",
            "relatedLocations": [],
            "videos": [],
            "overlays": []
        }

+ Response 216 (application/json)

         {
            "_id":4,
            "name":"Frauenstraße",
            "tags":[
                "Münster",
                "Frauenstraße",
                "Trattoria",
                "Kulturcafé",
                "Fürstin-von-Gallitzin-Wohnheim"
            ],
            "lon": 7.6189278,
            "lat": 51.9634288,
            "description":"Gegenüber der Trattoria",
            "relatedLocations": [],
            "videos": [],
            "overlays": []
        }

+ Response 217 (application/json)

         {
            "_id":4,
            "name":"Frauenstraße",
            "tags":[
                "Münster",
                "Frauenstraße",
                "Trattoria",
                "Kulturcafé",
                "Fürstin-von-Gallitzin-Wohnheim"
            ],
            "lon": 7.6189278,
            "lat": 51.9634288,
            "description":"Gegenüber der Trattoria",
            "relatedLocations": [],
            "videos": [],
            "overlays": []
        }

+ Response 400 (text/plain)
        
        Error: No data submitted!

        Error: The property "<propertyName>" was not found, but has to be defined!

        Error: The property "<propertyName>" is needless and not allowed!

        Error: The value of the property "<propertyName>" can not be emtpy!

        Error: The value of the property "<propertyName>" has to be a float/number!

        Error: The value of the property "<propertyName>" has to be an integer!

        Error: The element values of the array "<propertyName>" are not unique!

+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>

## Location [/api/locations/{id}]
A single Location object with all its details

+ Parameters
    + id (required, `4`) ... `id` **Interger** of a **Location**

### Retrieve a Location [GET]
(Status: **implemented**, Developer: Nicho)

+ Response 200 (application/json)

    + Body
    
            {
                "_id":4,
                "name":"Frauenstraße",
                "tags":[
                    "Münster",
                    "Frauenstraße",
                    "Trattoria",
                    "Kulturcafé",
                    "Fürstin-von-Gallitzin-Wohnheim"
                ],
                "lon":7.6189278,
                "lat":51.9634288,
                "description":"Gegenüber der Trattoria",
                "relatedLocations": [
                    1, 
                    3
                ],
                "videos": [
                    5
                ]
                "overlays": [
                    7,
                    8
                ]
            }
            
+ Response 406 (text/plain)

        Error: No valid request! The submitted ID is not an integer!            
            
+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>

### Edit a Location [PUT]
(Status: **implemented**, Developer: Nicho)

Changeable attributes:

- `name` **String** (can not be empty; example: *"Frauenstraße 2"*)
- `description` **String** (can be empty; example: *"Gegenüber der Trattoria"*)
- `tags[]` **String[ ]** (can be empty, but can not have empty elemtens like *""* and elements have to be unique; example: *["Münster", "Frauenstraße", "Trattoria", "Kulturcafé", "Fürstin-von-Gallitzin-Wohnheim"]*)
- `lon` **Float/Number** (can not be empty; example: *7.6189278*)
- `lat` **Float/Number** (can not be empty; example: *51.9634288*)
- `relatedLocations` **Integer[ ]** (can be empty or have to contain valid Location-IDs; example: *[ ]* or *[1,6,9,4,5]*)
- `videos` **Integer[ ]** (can be empty or have to contain valid video-IDs; example: *[ ]* or *[3]*)
- `overlays` **Integer[ ]** (can be empty or have to contain valid overlay-IDs; example: *[ ]* or *[2,7,8]*)

+ Request (application/json)

    + Body
    
            {
                "_id":4,
                "name":"Frauenstraße 2",
                "tags":[
                    "Münster",
                    "Frauenstraße",
                    "Trattoria",
                    "Kulturcafé",
                    "Fürstin-von-Gallitzin-Wohnheim"
                ],
                "lon":7.6189278,
                "lat":51.9634288,
                "description":"Gegenüber der Trattoria",
                "relatedLocations": [],
                "videos": [
                    711
                ],
                "overlays": []
            }

+ Response 201 (application/json)

        {
                "_id":4,
                "name":"Frauenstraße 2",
                "tags":[
                    "Münster",
                    "Frauenstraße",
                    "Trattoria",
                    "Kulturcafé",
                    "Fürstin-von-Gallitzin-Wohnheim"
                ],
                "lon":7.6189278,
                "lat":51.9634288,
                "description":"Gegenüber der Trattoria",
                "relatedLocations": [],
                "videos": [
                    711
                ],
                "overlays": []
        }
        
+ Response 400 (text/plain)

        Error: No data submitted!

        Error: The property "<propertyName>" is needless and not allowed!

        Error: The value of the property "<propertyName>" can not be emtpy!

        Error: The value of the property "<propertyName>" has to be a float/number!

        Error: The value of the property "<propertyName>" has to be an integer!

        Error: The element values of the array "<propertyName>" are not unique!

+ Response 404 (text/plain)

        Error: The submitted "<Object>"-ID could not be found!
        
        Error: No valid request! The submitted "<Object>"-ID belongs to a "<differentObject>"!

+ Response 406 (text/plain)

        Error: No valid request! The submitted ID is not an integer!
        
+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>

### Remove a Location [DELETE]
(Status: **implemented**, Developer: Nicho)

+ Response 204 (text/plain)

+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>


# Group Videos

## Videos Collection [/api/videos]

### List all Videos [GET]
(Status: **implemented**, Developer: Nicho)

+ Response 200 (application/json)

        {
            "videos": [
                {
                    "_id":35 , 
                    "description":"Frauenstraße bei Tag",
                    "name":"Frauenstraße",
                    "date":"",
                    "url":"http://giv-sitcomlab.uni-muenster.de:8080/media/video/task_02",
                    "tags":[]
                }, {
                    "_id":36,
                    "description":"Frauenstraße bei Tag",
                    "name":"Frauenstraße2",
                    "date":"",
                    "url":"http://giv-sitcomlab.uni-muenster.de:8080/media/video/task_03",
                    "tags":[]
                }
            ]
        }
        
+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>     

### Create a Video [POST]
(Status: **implemented**, Developer: Nicho)

Required attributes:

- `name` **String** (can not be empty; example: *"Frauenstraße"*)
- `description` **String** (can be empty; example: *"Frauenstraße bei Tag"*)
- `date` **Date** (can be empty or has to be the form **YYYY-MM-DD** or **YYYY-MM-DD HH:mm** [with **Y**=Year, **M**=Month, **D**=Day, **H**=Hour, **m**=Minute]; examples: *"2014-06-22"* or *"2014-06-22 08:03"*)
- `url` **String** (can not be empty and url has to be available; example: *"http://giv-sitcomlab.uni-muenster.de:8080/media/video/task_03.mp4"*)
- `tags[]` **String[ ]** (can be empty, but can not have empty elemtens like *""* and elements have to be unique; example: *["Schlossplatz", "Event: Send", "at night"]*)

+ Request (application/json)

    + body
    
            { 
                "description": "Frauenstraße bei Tag",
                "name": "Frauenstraße2",
                "date": "",
                "url": "http://giv-sitcomlab.uni-muenster.de:8080/media/video/task_03.mp4",
                "tags":[]
            }

+ Response 201 (application/json)

        {  
            "_id":36,
            "description":"Frauenstraße bei Tag",
            "name":"Frauenstraße2",
            "date":"",
            "url":"http://giv-sitcomlab.uni-muenster.de:8080/media/video/task_03.mp4",
            "tags":[]
        }
        
+ Response 400 (text/plain)
        
        Error: No data submitted!

        Error: The property "<propertyName>" was not found, but has to be defined!

        Error: The property "<propertyName>" is needless and not allowed!

        Error: The value of the property "<propertyName>" can not be emtpy!

        Error: The element values of the array "<propertyName>" are not unique!
        
        Error: The value of the property "url" is not a valid URL!
        
        Error: The value of the property "date" is not a valid DATE! Please submit a date in the form "YYYY-MM-DD" OR "YYYY-MM-DD HH:mm" (Y=YEAR, M=Month, D=Day, H=Hour, m=Minute), for example: "2014-05-01 08:04")!

+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>

## Video [/api/videos/{id}]
A single Video object with all details

+ Parameters
    + id (required, `36`) ... `id` **Interger** of a **Video**

### Retrieve a video [GET]
(Status: **implemented**, Developer: Nicho)

+ Response 200 (application/json)

    + Body

            {  
                "_id":36,
                "description":"Frauenstraße bei Tag",
                "name":"Frauenstraße2",
                "date":"",
                "url":"http://giv-sitcomlab.uni-muenster.de:8080/media/video/task_03.mp4",
                "tags":[]
            }
            
+ Response 406 (text/plain)

        Error: No valid request! The submitted ID is not an integer!
            
+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>

### Edit a Video [PUT]
(Status: **implemented**, Developer: Nicho)

Changeable attributes:

- `name` **String** (can not be empty; example: *"Frauenstraße"*)
- `description` **String** (can be empty; example: *"Frauenstraße bei Tag"*)
- `date` **Date** (can be empty or has to be the form **YYYY-MM-DD** or **YYYY-MM-DD HH:mm** [with **Y**=Year, **M**=Month, **D**=Day, **H**=Hour, **m**=Minute]; examples: *"2014-06-22"* or *"2014-06-22 08:03"*)
- `url` **String** (can not be empty and url has to be available; example: *"http://giv-sitcomlab.uni-muenster.de:8080/media/video/task_03.mp4"*)
- `tags[]` **String[ ]** (can be empty, but can not have empty elemtens like *""* and elements have to be unique; example: *["Schlossplatz", "Event: Send", "at night"]*)

+ Request (application/json)

    + body
    
                { 
                    "description": "Frauenstraße bei Tag",
                    "name": "Frauenstraße2",
                    "date": "",
                    "url": "http://giv-sitcomlab.uni-muenster.de:8080/media/video/task_03.mp4",
                    "tags":[]
                }

+ Response 201 (application/json)

        {  
            "_id":36,
            "description":"Frauenstraße bei Tag",
            "name":"Frauenstraße2",
            "date":"",
            "url":"http://giv-sitcomlab.uni-muenster.de:8080/media/video/task_03.mp4",
            "tags":[]
        }
        
+ Response 400 (text/plain)
        
        Error: No data submitted!

        Error: The property "<propertyName>" is needless and not allowed!

        Error: The value of the property "<propertyName>" can not be emtpy!

        Error: The element values of the array "<propertyName>" are not unique!

        Error: The value of the property "url" is not a valid URL!
        
        Error: The value of the property "date" is not a valid DATE! Please submit a date in the form "YYYY-MM-DD" OR "YYYY-MM-DD HH:mm" (Y=YEAR, M=Month, D=Day, H=Hour, m=Minute), for example: "2014-05-01 08:04")!

+ Response 404 (text/plain)

        Error: The submitted "<Object>"-ID could not be found!
        
        Error: No valid request! The submitted "<Object>"-ID belongs to a "<differentObject>"!

+ Response 406 (text/plain)

        Error: No valid request! The submitted ID is not an integer!
            
+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>

### Remove a Video [DELETE]
(Status: **implemented**, Developer: Nicho)

+ Response 204 (text/plain)

+ Response 406 (text/plain)

        Error: No valid request! The submitted ID is not an integer!
            
+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>

# Group Overlays

## Overlays Collection [/api/overlays]
### List all Overlays [GET]
(Status: **implemented**, Developer: Nicho)

+ Response 200 (application/json)
        
        {
            "overlays": [
                {   
                    "_id":23,
                    "tags":[
                        "video",
                        "test"
                    ],
                    "d":0,
                    "type":"html",
                    "url":"https://giv-sitcomlab.uni-muenster.de:8443/room/main/",
                    "h":600,
                    "w":800,
                    "rz":0,
                    "description":"Video Overlay Test",
                    "name":"Video Overlay",
                    "z":0,
                    "rx":0,
                    "y":0,
                    "ry":0,
                    "x":100
                }
            ]
        }   

+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>

### Create an Overlay [POST]
(Status: **implemented**, Developer: Nicho)

Required attributes:

- `name` **String** (can not be empty; example: *"1st Public Display"*)
- `description` **String** (can be empty; example: *"Public Display zum Anzeigen von ortsbezogenen Daten"*)
- `tags` **String[ ]** (can be empty, but can not have empty elemtens like *""* and elements have to be unique; example: *["video", "test", "Public Display"]*)
- `type` **String** (can not be empty and has to be one of these options: *"html"*, *"image"*, *"video"*)
- `url` **String** (can not be empty and url has to be available; example: *"https://giv-sitcomlab.uni-muenster.de:8443/room/main/"*)
- `w` **Float/Number** (can not be empty and has to be a float; expample: *800*; default: *0*)
- `h` **Float/Number** (can not be empty and has to be a float; expample: *600*; default: *0*)
- `x` **Float/Number** (can not be empty and has to be a float; expample: *100*; default: *0*)
- `y` **Float/Number** (can not be empty and has to be a float; expample: *10.1*; default: *0*)
- `z` **Float/Number** (can not be empty and has to be a float; expample: *20.2*; default: *0*)
- `d` **Float/Number** (can not be empty and has to be a float; expample: *30.3*; default: *0*)
- `rx` **Float/Number** (can not be empty and has to be a float; expample: *40.4*; default: *0*)
- `ry` **Float/Number** (can not be empty and has to be a float; expample: *50.5*; default: *0*)
- `rz` **Float/Number** (can not be empty and has to be a float; expample: *60.6*; default: *0*)


+ Request (application/json)

    + body 
    
            {   
                "tags":[
                    "video",
                    "test"
                ],
                "d":0,
                "type":"html",
                "url":"https://giv-sitcomlab.uni-muenster.de:8443/room/main/",
                "h":600,
                "w":800,
                "rz":0,
                "description":"Video Overlay Test",
                "name":"Video Overlay",
                "z":0,
                "rx":0,
                "y":0,
                "ry":0,
                "x":100
            }

+ Response 201 (application/json)

        {   
            "_id":23,
            "tags":[
                "video",
                "test"
            ],
            "d":0,
            "type":"html",
            "url":"https://giv-sitcomlab.uni-muenster.de:8443/room/main/",
            "h":600,
            "w":800,
            "rz":0,
            "description":"Video Overlay Test",
            "name":"Video Overlay",
            "z":0,
            "rx":0,
            "y":0,
            "ry":0,
            "x":100
        }

+ Response 400 (text/plain)

        Error: No data submitted!

        Error: The property "<propertyName>" was not found, but has to be defined!

        Error: The property "<propertyName>" is needless and not allowed!

        Error: The value of the property "<propertyName>" can not be emtpy!

        Error: The value of the property "<propertyName>" has to be a float/number!

        Error: The value of the property "<propertyName>" is incorrect! Only the values ["<value1>","<value2>","<value3>"] are allowed!

        Error: The element values of the array "<propertyName>" are not unique!

        Error: The value of the property "url" is not a valid URL!
        
+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>

## Overlay [/api/overlays/{id}]
A single Overlay object with all its details

+ Parameters
   + id (required, `23`) ... `id` **Interger** of an **Overlay**

### Retrieve an Overlay [GET]
(Status: **implemented**, Developer: Nicho)

+ Response 200 (application/json)

    + Body

            {
                "_id":23,
                "tags":[
                    "video",
                    "test"
                ],
                "d":0,
                "type":"html",
                "url":"https://giv-sitcomlab.uni-muenster.de:8443/room/main/",
                "h":600,
                "w":800,
                "rz":0,
                "description":"Video Overlay Test",
                "name":"Video Overlay",
                "z":0,
                "rx":0,
                "y":0,
                "ry":0,
                "x":100
            }
            
+ Response 406 (text/plain)

        Error: No valid request! The submitted ID is not an integer!
            
+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>            

### Edit an Overlay [PUT]
(Status: **implemented**, Developer: Nicho)

Changeable attributes:

- `name` **String** (can not be empty; example: *"1st Public Display"*)
- `description` **String** (can be empty; example: *"Public Display zum Anzeigen von ortsbezogenen Daten"*)
- `tags` **String[ ]** (can be empty, but can not have empty elemtens like *""* and elements have to be unique; example: *["video", "test", "Public Display"]*)
- `type` **String** (can not be empty and has to be one of these options: *"html"*, *"image"*, *"video"*)
- `url` **String** (can not be empty and url has to be available; example: *"https://giv-sitcomlab.uni-muenster.de:8443/room/main/"*)
- `w` **Float/Number** (can not be empty and has to be a float; expample: *800*; default: *0*)
- `h` **Float/Number** (can not be empty and has to be a float; expample: *600*; default: *0*)
- `x` **Float/Number** (can not be empty and has to be a float; expample: *100*; default: *0*)
- `y` **Float/Number** (can not be empty and has to be a float; expample: *10.1*; default: *0*)
- `z` **Float/Number** (can not be empty and has to be a float; expample: *20.2*; default: *0*)
- `d` **Float/Number** (can not be empty and has to be a float; expample: *30.3*; default: *0*)
- `rx` **Float/Number** (can not be empty and has to be a float; expample: *40.4*; default: *0*)
- `ry` **Float/Number** (can not be empty and has to be a float; expample: *50.5*; default: *0*)
- `rz` **Float/Number** (can not be empty and has to be a float; expample: *60.6*; default: *0*)

+ Request (application/json)

    + body 
    
            {   
                "tags":[
                    "video",
                    "test"
                ],
                "d":0,
                "type":"html",
                "url":"https://giv-sitcomlab.uni-muenster.de:8443/room/main/",
                "h":600,
                "w":800,
                "rz":0,
                "description":"Video Overlay Test",
                "name":"Video Overlay",
                "z":0,
                "rx":0,
                "y":0,
                "ry":0,
                "x":100
            }

+ Response 201 (application/json)

        {   
            "_id":23,
            "tags":[
                "video",
                "test"
            ],
            "d":0,
            "type":"html",
            "url":"https://giv-sitcomlab.uni-muenster.de:8443/room/main/",
            "h":600,
            "w":800,
            "rz":0,
            "description":"Video Overlay Test",
            "name":"Video Overlay",
            "z":0,
            "rx":0,
            "y":0,
            "ry":0,
            "x":100
        }
        
+ Response 400 (text/plain)

        Error: No data submitted!

        Error: The property "<propertyName>" is needless and not allowed!

        Error: The value of the property "<propertyName>" can not be emtpy!

        Error: The value of the property "<propertyName>" has to be a float/number!

        Error: The value of the property "<propertyName>" is incorrect! Only the values ["<value1>","<value2>","<value3>"] are allowed!

        Error: The element values of the array "<propertyName>" are not unique!

        Error: The value of the property "url" is not a valid URL!

+ Response 404 (text/plain)

        Error: The submitted "<Object>"-ID could not be found!
        
        Error: No valid request! The submitted "<Object>"-ID belongs to a "<differentObject>"!

+ Response 406 (text/plain)

        Error: No valid request! The submitted ID is not an integer!
            
+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>


### Remove an Overlay [DELETE]
(Status: **implemented**, Developer: Nicho)

+ Response 204 (text/plain)

+ Response 406 (text/plain)

        Error: No valid request! The submitted ID is not an integer!
            
+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>


# Group Scenarios

## Scenario Collection [/api/scenarios]

### List all Scenarios [GET]
(Status: **in design**)

+ Response 200 (application/json)

        {
            "scenarios": [
                {
                    "_id":9,
                    "added":1401379792309,
                    "creator": "nicho90",
                    "name": "Scenario 1"
                }, {
                    "_id":2,
                    "added":1401378034808,
                    "creator": "mostkamp", 
                    "name": "Scenario 2",
                    }
                }
            ]
        }
        
### Create a Scenario [POST]
(Status: **in design**)

Required attributes:

- `name` **String** (e.g. *"Scenario 3"*)
- `tags[]` **String[ ]** (e.g. *["Münster"]*)
- `description` **String** (e.g. *""*)
- `containedLocations` **Int[ ]** (e.g. *[ ]*, have to contained a minimum of 2 Locations)

+ Request (application/json)

    + body
        
            {
                "name":"Scenario 3"
                "tags": [
                    "Münster"
                ],
                "description": "",
                "containedLocations": [
                    1,
                    3
                ]
            }

+ Response 201 (application/json)

        {  
                    "_id":10,
                    "added":1401379792309,
                    "creator": "nicho90",
                    "name":"Scenario 3"
                    "tags": [
                        "Münster"
                    ],
                    "description": "",
                    "containedLocations": [
                        1,
                        3
                    ]
        }
        
        
## Scenario [/api/scenarios/{id}]
A single, complete Scenario object with all details (meta-data), locations, videos and overlays

+ Parameters
    + id (required, number, `2`) ... Numeric `id` of the Location to perform action with. Has example value.


### Retrieve a scenario [GET]
(Status: **in design**)

+ Response 200 (application/json)

    + Body

            {
                "scenario":[
                    "_id":10,
                    "added":1401379792309,
                    "creator": "nicho90",
                    "name":"Scenario 3",
                    "startAtLocation": 1,
                    "locations": [
                            {
                                "_id":3,
                                "name":"Schlossplatz",
                                "tags": [
                                    "Münster",
                                    "Schlossplatz",
                                    "Stadtmitte"
                                ],
                                "lon":"7.6178207",
                                "lat":"51.9634296",
                                "description":"Der im Westen der Stadt Münster gelegene Platz gilt als zweitgrößter innerstädtischer Platz Europas. Er entstand an Stelle der von Fürstbischof Christoph Bernhard von Galen 1661 angelegten Zitadelle, die im Jahr 1765 niedergelegt wurde. Nach dem Bau des Residenzschlosses wurde ein Teil des Platzes mit gärtnerischen Anlagen ausgestattet. Das übrige Areal diente zeitweise als Exerzierplatz. Auf der Freifläche finden bis heute regelmäßig Großveranstaltungen wie etwa der Send statt.\nDer Hindenburgplatz, der mehr als 150 Jahre Neuplatz hieß, hat für Münster hohe Bedeutung. Sowohl die Benennung des Platzes als auch seine Gestaltung werden seit Jahren intensiv diskutiert. 2008 ging ein weiterer Antrag zur Umbenennung des Hindenburgplatzes in die Beratung der politischen Gremien.\n",
                                "videos": [ 
                                    {
                                        "_id":34,
                                        "description":"Schlossplatz bei Tag",
                                        "name":"Schlossplatz",
                                        "date":"No date available",
                                        "url":"http://giv-sitcomlab.uni-muenster.de:8080/media/video/task_01"
                                    }
                                ],
                                "overlays": [
                                    {   
                                        "_id":23,
                                        "tags":[
                                            "video",
                                            "test"
                                        ],
                                        "d":0,
                                        "type":"html",
                                        "url":"https://giv-sitcomlab.uni-muenster.de:8443/room/main/",
                                        "h":600,
                                        "w":800,
                                        "rz":0,
                                        "description":"Video Overlay Test",
                                        "name":"Video Overlay",
                                        "z":0,
                                        "rx":0,
                                        "y":0,
                                        "ry":0,
                                        "x":100
                                    }    
                                ]
                            }, {
                                "_id":6,
                                "name":"Krummer Timpen",
                                "tags": [
                                    "Münster",
                                    "Krummer Timpen",
                                    "ULB",
                                    "Juridicum"
                                ],
                                "lon":"7.6201791",
                                "lat":"51.9627494",
                                "description":"Gegenüber der ULB",
                                "videos": [
                                    {
                                        "_id":37,
                                        "description":"Krummer Timpen bei Tag",
                                        "name":"Krummer Timpen",
                                        "date":"No date available",
                                        "url":"http://giv-sitcomlab.uni-muenster.de:8080/media/video/task_04"
                                    }
                                 ],
                                "overlays": [
                                    
                                ]
                            }, {
                                "_id":4,
                                "name":"Frauenstraße",
                                "tags":[
                                    "Münster",
                                    "Frauenstraße",
                                    "Trattoria",
                                    "Kulturcafé",
                                    "Fürstin-von-Gallitzin-Wohnheim"
                                ],
                                "lon":"7.6189278",
                                "lat":"51.9634288",
                                "description":"Gegenüber der Trattoria",
                                "videos": [
                                    "id":2,
                                        "_id":35,
                                        "description":"Frauenstraße bei Tag",
                                        "name":"Frauenstraße",
                                        "date":"No date available",
                                        "url":"http://giv-sitcomlab.uni-muenster.de:8080/media/video/task_02"
                                ],
                                "overlays": [
                                
                                ]
                            }    
                    ]
            }

        
### Remove a Scenario  [DELETE]
(Status: **in design**)
+ Response 204 (text/plain)

+ Response 500 (text/plain)

        Error: Internal Server Error
        Message: <Errormessage>      
        
        